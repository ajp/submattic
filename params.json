{"name":"Submattic","tagline":"Crazy simple, Node.js powered, whitelist-only email groups. For humans!","body":"Submattic\r\n=========\r\n\r\n*Crazy simple, Node.js powered, whitelist-only email groups. For humans!*\r\n\r\n## Requirements\r\n\r\n1. [Node.js](http://nodejs.com) & [NPM](http://npmjs.com) installed on your dev server\r\n2. A [Mandrill](http://mandrill.com) account\r\n3. A domain or subdomain with your [MX records pointed at Mandrill](http://help.mandrill.com/entries/21699367-Overview)\r\n\r\n## Installing\r\n\r\n1. Clone the repo to your dev server.\r\n2. Run `npm install`\r\n3. Add and edit your groups in /groups/<name of your group>.yaml\r\n4. Deploy to [Heroku](http://heroku.com), [Nodejitsu](http://nodejitsu.com), or your Node hosting service of choice.\r\n5. Point Mandrill's Inbound Email (*) wildcard domain route to the public root URL (e.g. http://example-url.com). You can choose to specially add each mailbox route explicity to avoid having exceess email (read: SPAM) hit your server unnecessarily. ![Mandrill Settings](http://f.cl.ly/items/3Z1G2U3e1J1a1I370l1B/mandrill-screenshot.png)\r\n6. Edit the config.yaml file and add your Mandrill API Key.\r\n\r\n## Usage\r\nCreate a group by adding a YAML file to the /groups folder. A file named `gamenight.yaml` would create the email list `gamenight@example.com`. The file should contain a title (used in the subject lines) and a list of name/email keys for all the memebers. Here's an example of a group file:\r\n\r\n```yaml\r\ntitle: Example\r\nmembers:\r\n  -\r\n    name: Peter Pevensie\r\n    email: peter@example.com\r\n  -\r\n    name: Susan Pevensie\r\n    email: susan@example.com\r\n  -\r\n    name: Edmund Pevensie\r\n    email: edmund@example.com\r\n  -\r\n    name: Lucy Pevensie\r\n    email: lucy@example.com\r\n```\r\n\r\nOnly emails from people **within the group** (this is white-listing) will be accepted and routed to the rest of the members. Full HTML/text content will be passed along.\r\n\r\n## Quick Start guides to hosting Submattic\r\n\r\nWe'll assume you have Submattic running locally already.\r\n\r\n### Running on [Heroku](http://heroku)\r\n\r\n1. [Create a Heroku account](https://api.heroku.com/signup/devcenter)\r\n2. Install the Heroku gem: `gem install heroku` or install the [Heroku Toolbelt](https://toolbelt.heroku.com/)\r\n3. Login `heroku login` and authenticate with your account info\r\n4. Create the app: `heroku create`\r\n5. Deploy: `git push heroku master`\r\n6. Turn a dyno on to make sure the app is running: `heroku ps:scale web=1`\r\n7. Visit the app to make sure Submattic is running: `heroku open`.\r\n\r\n### Running on [Nodejitsu](http://nodejitsu.com)\r\n\r\n1. [Create a Nodejitsu account](https://www.nodejitsu.com/signup)\r\n2. Install `jitsu`, the command line interface for Nodejitsu's platform: `npm install jitsu -g`\r\n3. Login `jitsu login` and authenticate with your account info\r\n4. Deploy: `jitsu deploy`. Nodejitsu will ask you for some additional info, like your app's name, subdomain, and start script. The start script is `app.js`.\r\n5. Visit `<yourapp>.nodejitsu.com` to make sure everything's running.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}